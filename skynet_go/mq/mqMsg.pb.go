// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mqMsg.proto

package mq

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MqMsg struct {
	Typ                  *int32   `protobuf:"varint,1,req,name=Typ" json:"Typ,omitempty"`
	Harbor               *int32   `protobuf:"varint,2,req,name=Harbor" json:"Harbor,omitempty"`
	Instance             *string  `protobuf:"bytes,3,req,name=Instance" json:"Instance,omitempty"`
	Topic                *string  `protobuf:"bytes,4,req,name=Topic" json:"Topic,omitempty"`
	Tag                  *string  `protobuf:"bytes,5,req,name=Tag" json:"Tag,omitempty"`
	Order                *uint64  `protobuf:"varint,6,req,name=Order" json:"Order,omitempty"`
	Class                *string  `protobuf:"bytes,7,req,name=Class" json:"Class,omitempty"`
	Method               *string  `protobuf:"bytes,8,req,name=Method" json:"Method,omitempty"`
	PendingSeq           *uint64  `protobuf:"varint,9,req,name=PendingSeq" json:"PendingSeq,omitempty"`
	Encode               *int32   `protobuf:"varint,10,req,name=encode" json:"encode,omitempty"`
	Body                 *string  `protobuf:"bytes,11,req,name=Body" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MqMsg) Reset()         { *m = MqMsg{} }
func (m *MqMsg) String() string { return proto.CompactTextString(m) }
func (*MqMsg) ProtoMessage()    {}
func (*MqMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_57b08d200c3137e1, []int{0}
}

func (m *MqMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MqMsg.Unmarshal(m, b)
}
func (m *MqMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MqMsg.Marshal(b, m, deterministic)
}
func (m *MqMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MqMsg.Merge(m, src)
}
func (m *MqMsg) XXX_Size() int {
	return xxx_messageInfo_MqMsg.Size(m)
}
func (m *MqMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_MqMsg.DiscardUnknown(m)
}

var xxx_messageInfo_MqMsg proto.InternalMessageInfo

func (m *MqMsg) GetTyp() int32 {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return 0
}

func (m *MqMsg) GetHarbor() int32 {
	if m != nil && m.Harbor != nil {
		return *m.Harbor
	}
	return 0
}

func (m *MqMsg) GetInstance() string {
	if m != nil && m.Instance != nil {
		return *m.Instance
	}
	return ""
}

func (m *MqMsg) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *MqMsg) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *MqMsg) GetOrder() uint64 {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return 0
}

func (m *MqMsg) GetClass() string {
	if m != nil && m.Class != nil {
		return *m.Class
	}
	return ""
}

func (m *MqMsg) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *MqMsg) GetPendingSeq() uint64 {
	if m != nil && m.PendingSeq != nil {
		return *m.PendingSeq
	}
	return 0
}

func (m *MqMsg) GetEncode() int32 {
	if m != nil && m.Encode != nil {
		return *m.Encode
	}
	return 0
}

func (m *MqMsg) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*MqMsg)(nil), "mq.MqMsg")
}

func init() { proto.RegisterFile("mqMsg.proto", fileDescriptor_57b08d200c3137e1) }

var fileDescriptor_57b08d200c3137e1 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0x41, 0x4e, 0x86, 0x30,
	0x10, 0x85, 0x63, 0xa1, 0x08, 0xc3, 0xc6, 0x4c, 0x8c, 0x99, 0xb8, 0x30, 0xc4, 0x15, 0x2b, 0x0f,
	0xa1, 0x1b, 0x5d, 0x10, 0x0d, 0x72, 0x81, 0x4a, 0x1b, 0x24, 0x91, 0x16, 0x5a, 0x36, 0x1c, 0xc0,
	0x7b, 0x9b, 0x4e, 0x89, 0xf9, 0x77, 0xef, 0xfb, 0xda, 0x79, 0x79, 0x50, 0x2f, 0x5b, 0x17, 0xa6,
	0xa7, 0xd5, 0xbb, 0xdd, 0xa1, 0x58, 0xb6, 0xc7, 0x5f, 0x01, 0xb2, 0x8b, 0x0e, 0x6f, 0x20, 0x1b,
	0x8e, 0x95, 0xae, 0x1a, 0xd1, 0xca, 0x3e, 0x46, 0xbc, 0x83, 0xe2, 0x55, 0xf9, 0x2f, 0xe7, 0x49,
	0xb0, 0x3c, 0x09, 0xef, 0xa1, 0x7c, 0xb3, 0x61, 0x57, 0x76, 0x34, 0x94, 0x35, 0xa2, 0xad, 0xfa,
	0x7f, 0xc6, 0x5b, 0x90, 0x83, 0x5b, 0xe7, 0x91, 0x72, 0x7e, 0x48, 0xc0, 0xdd, 0x6a, 0x22, 0xc9,
	0x2e, 0xc6, 0xf8, 0xef, 0xdd, 0x6b, 0xe3, 0xa9, 0x68, 0x44, 0x9b, 0xf7, 0x09, 0xa2, 0x7d, 0xf9,
	0x51, 0x21, 0xd0, 0x75, 0xba, 0x66, 0x88, 0x3b, 0x3a, 0xb3, 0x7f, 0x3b, 0x4d, 0x25, 0xeb, 0x93,
	0xf0, 0x01, 0xe0, 0xc3, 0x58, 0x3d, 0xdb, 0xe9, 0xd3, 0x6c, 0x54, 0x71, 0xd1, 0x85, 0x89, 0x77,
	0xc6, 0x8e, 0x4e, 0x1b, 0x82, 0xb4, 0x3f, 0x11, 0x22, 0xe4, 0xcf, 0x4e, 0x1f, 0x54, 0x73, 0x1b,
	0xe7, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x49, 0xfa, 0x82, 0x4a, 0x19, 0x01, 0x00, 0x00,
}
